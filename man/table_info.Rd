% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/define_meta_data.R
\name{table_info}
\alias{table_info}
\title{Define Metadata for a Data Table in a Tidy Format}
\usage{
table_info(
  table_name,
  source_identifier,
  identifier_columns,
  key_outcome_specs
)
}
\arguments{
\item{table_name}{Character string, the conceptual name of the table.}

\item{source_identifier}{Character string, the file name or DB table identifier.}

\item{identifier_columns}{Character vector, names of column(s) acting as primary key(s).}

\item{key_outcome_specs}{A list of 'OutcomeSpec' lists. Each OutcomeSpec is a list
with elements \code{OutcomeName}, \code{ValueExpression} (use \code{quote()}), and
\code{AggregationMethods} (a list of 'AggregationSpec' lists).}
}
\value{
A tidy data.frame (specifically, a data.table) with the table's
metadata, flattened so each row is a unique aggregation specification.
}
\description{
Takes descriptive information about a table and its analytical outcomes and
returns a tidy data.frame where each row represents a single, unique
aggregation method for a specific key outcome.
}
\examples{
transactions_info <- table_info(
  table_name = "transactions",
  source_identifier = "transactions.csv",
  identifier_columns = c("customer_id", "product_id", "time"),
  key_outcome_specs = list(
    list( # Outcome: Revenue
      OutcomeName = "Revenue",
      ValueExpression = quote(price * quantity),
      AggregationMethods = list(
        list(AggregatedName = "TotalRevenueByCustomer", AggregationFunction = "sum",
             GroupingVariables = "customer_id"),
        list(AggregatedName = "TotalRevenueByProduct", AggregationFunction = "sum",
             GroupingVariables = "product_id")
      )
    ),
    list( # Outcome: Units Sold
      OutcomeName = "UnitsSold",
      ValueExpression = quote(quantity),
      AggregationMethods = list(
        list(AggregatedName = "TotalUnitsSoldByProduct", AggregationFunction = "sum",
             GroupingVariables = "product_id")
      )
    )
  )
)
print(transactions_info)
}
